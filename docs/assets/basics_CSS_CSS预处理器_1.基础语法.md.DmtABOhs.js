import{_ as a,c as i,a as h,a3 as s,o as n}from"./chunks/framework.u9PDQrMc.js";const y=JSON.parse('{"title":"基础语法","description":"","frontmatter":{},"headers":[],"relativePath":"basics/CSS/CSS预处理器/1.基础语法.md","filePath":"basics/CSS/CSS预处理器/1.基础语法.md","lastUpdated":1719049887000}'),l={name:"basics/CSS/CSS预处理器/1.基础语法.md"},t=s('<h1 id="基础语法" tabindex="-1">基础语法 <a class="header-anchor" href="#基础语法" aria-label="Permalink to &quot;基础语法&quot;">​</a></h1><p>本节的内容包括：注释、变量、数据类型、嵌套语法、插值语法、运算</p><h2 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h2><p>我们可以把反复使用的 CSS 属性值定义为变量，然后通过<code>变量名</code>将其引用，从而避免了多次重复的书写同一个属性值。</p><h3 id="变量声明" tabindex="-1">变量声明 <a class="header-anchor" href="#变量声明" aria-label="Permalink to &quot;变量声明&quot;">​</a></h3><p>Scss 变量声明与 CSS 类似，变量以 <code>$</code> 开头</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$highlight-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#f90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="变量声明规则" tabindex="-1">变量声明规则 <a class="header-anchor" href="#变量声明规则" aria-label="Permalink to &quot;变量声明规则&quot;">​</a></h3><p>Scss 中，变量的命名规则遵循一些通用的原则，以提高代码的可读性和可维护性。</p><ol><li>使用有意义的名称</li><li>使用小写字母和连接符</li><li>避免使用缩写和简写</li><li>采用一致的命名规范</li></ol><br>',11),e=s(`<div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$primary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#ff0000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$secondary-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#00ff00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$button-text-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#333</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="变量的使用" tabindex="-1">变量的使用 <a class="header-anchor" href="#变量的使用" aria-label="Permalink to &quot;变量的使用&quot;">​</a></h3><p>直接在规则集中使用变量，还是以<code>$</code> 开头：</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$highlight-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="变量数据类型" tabindex="-1">变量数据类型 <a class="header-anchor" href="#变量数据类型" aria-label="Permalink to &quot;变量数据类型&quot;">​</a></h3><h3 id="变量插值" tabindex="-1">变量插值 <a class="header-anchor" href="#变量插值" aria-label="Permalink to &quot;变量插值&quot;">​</a></h3><p>变量的插值与变量的直接使用有点类似，不同的是使用变量插值可以将变量值嵌入到选择器名、属性或值中，而不单单只是在值中使用 <br></p><p>变量插值使用 <code>#{}</code> 语法来将变量的值嵌入到字符串中</p><p>基本插值：</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$class-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my-element&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用变量插值特性</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">#{$class-name}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">#{$color}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>高级插值：用于计算、函数和复杂表达式中，插值表达式中的计算结果将作为最终的值</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.my-element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">calc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">#{$width}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">#{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="作用域" tabindex="-1">作用域 <a class="header-anchor" href="#作用域" aria-label="Permalink to &quot;作用域&quot;">​</a></h2><h3 id="局部作用域" tabindex="-1">局部作用域 <a class="header-anchor" href="#局部作用域" aria-label="Permalink to &quot;局部作用域&quot;">​</a></h3><h3 id="全局作用域" tabindex="-1">全局作用域 <a class="header-anchor" href="#全局作用域" aria-label="Permalink to &quot;全局作用域&quot;">​</a></h3><h2 id="变量值更改" tabindex="-1">变量值更改 <a class="header-anchor" href="#变量值更改" aria-label="Permalink to &quot;变量值更改&quot;">​</a></h2><h2 id="变量运算" tabindex="-1">变量运算 <a class="header-anchor" href="#变量运算" aria-label="Permalink to &quot;变量运算&quot;">​</a></h2><h3 id="数字运算" tabindex="-1">数字运算 <a class="header-anchor" href="#数字运算" aria-label="Permalink to &quot;数字运算&quot;">​</a></h3><h3 id="颜色运算" tabindex="-1">颜色运算 <a class="header-anchor" href="#颜色运算" aria-label="Permalink to &quot;颜色运算&quot;">​</a></h3><h3 id="字符串运算" tabindex="-1">字符串运算 <a class="header-anchor" href="#字符串运算" aria-label="Permalink to &quot;字符串运算&quot;">​</a></h3><h2 id="嵌套规则" tabindex="-1">嵌套规则 <a class="header-anchor" href="#嵌套规则" aria-label="Permalink to &quot;嵌套规则&quot;">​</a></h2><h2 id="父级选择器" tabindex="-1">父级选择器 &amp; <a class="header-anchor" href="#父级选择器" aria-label="Permalink to &quot;父级选择器 &amp;&quot;">​</a></h2>`,22);function p(k,r,d,o,E,c){return n(),i("div",null,[t,h(" 对应到代码： "),e])}const F=a(l,[["render",p]]);export{y as __pageData,F as default};
